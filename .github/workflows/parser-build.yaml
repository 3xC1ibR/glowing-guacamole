name: deploy parser

on:
  # run manually
  workflow_dispatch:
  # run on dev branches
#  push:
#    branches:
#      - "main"
  pull_request:
    paths:
      - '.github/workflows/parser-build.yaml'
      - 'services/parser-service/**'
#    branches:
#      - '**'
#      - "main"
env:
  SERVICE_NAME: 'parser-service'
  SERVICE_PATH: 'services/parser-service'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: set variables
      run: |
        if ${{ github.ref == 'refs/heads/main' }}; then
          echo "ENV=prod" >> $GITHUB_ENV
        else
          echo "ENV=dev" >> $GITHUB_ENV
        fi
    - name: echo
      run: |
        echo '...building'
        echo $ENV
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: deploy
      run: |
        python .github/workflows/deploy.py --env $ENV

  dev-deploy:
    permissions:
      deployments: write

    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: parser-dev
          payload: '{"endpoint": 89483999222}'
          description: foobar
          auto-inactive: true
          initial-status: success

      - name: eploy
        run: |
          echo "======================== Your application is available at: ========================"
          echo 'done'
          echo "==================================================================================="
  production-deploy:
    permissions:
      deployments: write

    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: eploy
        run: |
          echo 'done'

      - name: release vars
        run: |
          echo "version=$(cat $SERVICE_PATH/version)" >> $GITHUB_ENV
          echo "tag=${{ env.SERVICE_NAME}}/$(cat $SERVICE_PATH/version)" >> $GITHUB_ENV

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.SERVICE_NAME}}/${{ env.version }}"
          prerelease: ${{ github.ref != 'refs/heads/main' }}
          title: "${{ env.SERVICE_NAME }}/${{ env.version }}"

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: parser-prod
          payload: '{"endpoint": 89483999222}'
          production-environment: true
          description: foobar
          auto-inactive: false
