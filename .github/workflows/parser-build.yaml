name: build and deploy parser

on:
  # run manually
  workflow_dispatch:
  # run on dev branches
  push:
    branches:
      - "main"
  pull_request:
    paths:
      - '.github/workflows/parser-build.yaml'
      - 'services/parser-service/**'
#    branches:
#      - '**'
#      - "main"
env:
  SERVICE_NAME: 'parser-service'
  SERVICE_PATH: 'services/parser-service'
jobs:
  build:
    name: Build the thing
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: set variables
      run: |
        if ${{ github.ref == 'refs/heads/main' }}; then
          echo "ENV=prod" >> $GITHUB_ENV
        else
          echo "ENV=dev" >> $GITHUB_ENV
        fi
    - name: echo
      run: |
        echo '...building'
        echo $ENV
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: deploy
      run: |
        python .github/workflows/deploy.py --env $ENV
    - name: release vars
      run: |
        echo "endpoint=$(cat somefile)" >> $GITHUB_ENV
        echo "version=$(cat $SERVICE_PATH/version)" >> $GITHUB_ENV
        echo "tag=${{ env.SERVICE_NAME}}/$(cat $SERVICE_PATH/version)" >> $GITHUB_ENV
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        name: "${{ env.SERVICE_NAME }}/${{ env.version }}"
        draft: ${{ github.ref != 'refs/heads/main' }}
        tag: "${{ env.SERVICE_NAME}}/${{ env.version }}"
  dev-deploy:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
      url: 'https://google.com'
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: eploy
        run: |
          echo 'done'
  production-deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: prod
      url: 'https://google.com'
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: eploy
        run: |
          echo 'done'


